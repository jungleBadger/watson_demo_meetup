{
  "_args": [
    [
      {
        "raw": "audiobuffer@0.2.x",
        "scope": null,
        "escapedName": "audiobuffer",
        "name": "audiobuffer",
        "rawSpec": "0.2.x",
        "spec": ">=0.2.0 <0.3.0",
        "type": "range"
      },
      "/Users/danielabrao/Desktop/personal/watson_demo_meetup/node_modules/web-audio-api"
    ]
  ],
  "_from": "audiobuffer@>=0.2.0 <0.3.0",
  "_id": "audiobuffer@0.2.0",
  "_inCache": true,
  "_location": "/audiobuffer",
  "_npmUser": {
    "name": "sebpiq",
    "email": "sebpiq@gmail.com"
  },
  "_npmVersion": "1.2.32",
  "_phantomChildren": {},
  "_requested": {
    "raw": "audiobuffer@0.2.x",
    "scope": null,
    "escapedName": "audiobuffer",
    "name": "audiobuffer",
    "rawSpec": "0.2.x",
    "spec": ">=0.2.0 <0.3.0",
    "type": "range"
  },
  "_requiredBy": [
    "/web-audio-api"
  ],
  "_resolved": "https://registry.npmjs.org/audiobuffer/-/audiobuffer-0.2.0.tgz",
  "_shasum": "7cf2df30701aac184333eaf9e8ee3b01830c861a",
  "_shrinkwrap": null,
  "_spec": "audiobuffer@0.2.x",
  "_where": "/Users/danielabrao/Desktop/personal/watson_demo_meetup/node_modules/web-audio-api",
  "analyze": false,
  "author": {
    "name": "SÃ©bastien Piquemal",
    "email": "sebpiq@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/sebpiq/AudioBuffer/issues"
  },
  "dependencies": {
    "underscore": "1.4.x"
  },
  "description": "An implementation of Web Audio API's AudioBuffer for node.js and the browser.",
  "devDependencies": {
    "mocha": "1.12.x"
  },
  "directories": {},
  "dist": {
    "shasum": "7cf2df30701aac184333eaf9e8ee3b01830c861a",
    "tarball": "https://registry.npmjs.org/audiobuffer/-/audiobuffer-0.2.0.tgz"
  },
  "engines": {
    "node": ">=0.10"
  },
  "homepage": "https://github.com/sebpiq/AudioBuffer#readme",
  "keywords": [
    "audio",
    "sound",
    "music",
    "web audio",
    "web audio api",
    "dsp"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "sebpiq",
      "email": "sebpiq@gmail.com"
    }
  ],
  "name": "audiobuffer",
  "optionalDependencies": {},
  "readme": "AudioBuffer\n=============\n\nAn implementation of [Web Audio API's AudioBuffer](https://dvcs.w3.org/hg/audio/raw-file/tip/webaudio/specification.html#AudioBuffer) for node.js.\nWith extra-sugar for slicing, concatenating, creating, ... audiobuffers.\n\nGetting started \n=================\n\nInstall `AudioBuffer` with `npm` :\n\n```\nnpm install audiobuffer\n```\n\nThen import it in your code, and do your stuff :\n\n```javascript\nvar AudioBuffer = require('audiobuffer')\nvar audioBuffer = new AudioBuffer(1, 100000, 44100)\n```\n\n\nAPI\n=====\n\n###AudioBuffer(numberOfChannels, length, sampleRate)\n\nCreates an empty `AudioBuffer` with `numberOfChannels` channels and `length` frames.\n\n\n####getChannelData(channel)\n\nReturns a `channel`.\n\n\n####slice(start, end)\n\nReturns a slice of the calling `AudioBuffer`.\nThe arguments have the same meaning as a standard `Array.slice`.\nThe slice happens in the length, therefore the returned buffer has the same number of channels and the same sample rate as the calling `AudioBuffer`.\n\n\n####concat(audioBuffer)\n\nReturns a new `AudioBuffer`, result of the concatenation of the calling instance with `audioBuffer`.\n`audioBuffer` must have the same number of channels and the same sample rate as the calling instance, or an error will be thrown.\nThis method behaves similarly to `Array.concat`.\nThe concatenation happens in the length, therefore the returned buffer has the same number of channels and the same sample rate than the calling `AudioBuffer`.\n\n\n####set(audioBuffer, offset)\n\nSets the calling audio buffer channels with the values from `audioBuffer`, starting at `offset`\n\n\n###Class methods\n\n####filledWithVal(val, numberOfChannels, length, sampleRate)\n\nReturns an `AudioBuffer`, each sample filled with `val`.\n\n\n####fromArray(array, sampleRate)\n\nReturns an `AudioBuffer`, with data taken from `array`. Example :\n\n```javascript\n// Creates a stereo AudioBuffer of length 5 and sample rate 22050.\nvar audioBuffer = AudioBuffer.fromArray([\n  [1, 0.5, 0.2, 1, 0.5],\n  [-1, -0.8, -0.7, -0.6, 0.3],\n], 22050)\n```\n\n\nChangelog\n===========\n\n0.2.0\n\n- AudioBuffer.set\n\n0.1.0\n\n- first release\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sebpiq/AudioBuffer.git"
  },
  "version": "0.2.0"
}
